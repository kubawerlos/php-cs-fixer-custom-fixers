<?php

declare(strict_types = 1);

namespace PhpCsFixerCustomFixers\Fixer;

use PhpCsFixer\FixerDefinition\CodeSample;
use PhpCsFixer\FixerDefinition\FixerDefinition;
use PhpCsFixer\Tokenizer\Tokens;
use PhpCsFixerCustomFixers\CommentRemover;

final class NoPhpStormGeneratedCommentFixer extends AbstractFixer
{
    public function getDefinition() : FixerDefinition
    {
        return new FixerDefinition(
            'There must be no comment generated by PhpStorm.',
            [new CodeSample('<?php
/**
 * Created by PhpStorm.
 * User: root
 * Date: 01.01.70
 * Time: 12:00
 */
namespace Foo;
')]
        );
    }

    public function isCandidate(Tokens $tokens) : bool
    {
        return $tokens->isAnyTokenKindsFound([T_COMMENT, T_DOC_COMMENT]);
    }

    public function isRisky() : bool
    {
        return false;
    }

    public function fix(\SplFileInfo $file, Tokens $tokens) : void
    {
        foreach ($tokens as $index => $token) {
            if (!$token->isGivenKind([T_COMMENT, T_DOC_COMMENT])) {
                continue;
            }

            if (\preg_match('/\*\h+Created by PhpStorm/i', $token->getContent(), $matches) !== 1) {
                continue;
            }

            CommentRemover::removeCommentWithLinesIfPossible($tokens, $index);
        }
    }

    public function getPriority() : int
    {
        return 0;
    }
}

parameters:
  bootstrapFiles:
    - ../vendor/autoload.php
  excludes_analyse:
    - ./src/Readme
  ignoreErrors:
    - message: '#^Call to an undefined method PhpCsFixer\\Fixer\\FixerInterface::[a-zA-Z]+\(\)\.$#'
      path: ../tests
    - message: '#^Call to function method_exists\(\) with ''Tests\\\\.*'' and ''.*'' will always evaluate to true\.$#'
      path: ../tests
    - message: '#^Parameter \#\d+ \$[a-zA-Z0-9]+ of class ReflectionClass constructor expects class-string<T of object>\|T of object, string given\.$#'
      path: ../tests
    - message: '# will always evaluate to true\.$#'
      path: ../tests
  level: max
  paths:
    - ../src
    - ../tests
  reportMaybesInMethodSignatures: false
  stubFiles:
    - ./phpstan.stub

includes:
  - ./vendor/symplify/phpstan-rules/config/services/services.neon
  - ./vendor/symplify/phpstan-rules/packages/cognitive-complexity/config/cognitive-complexity-services.neon
  - ./vendor/phpstan/phpstan/conf/bleedingEdge.neon
  - ./vendor/phpstan/phpstan-phpunit/extension.neon
  - ./vendor/phpstan/phpstan-strict-rules/rules.neon

services:
  - class: Symplify\PHPStanRules\CognitiveComplexity\Rules\FunctionLikeCognitiveComplexityRule
    tags: [ phpstan.rules.rule ]
    arguments:
      maxMethodCognitiveComplexity: 13

<?php

namespace PhpCsFixer {
    class Preg {
        /**
         * @param string|string[] $subject
         */
        public static function replace(string $pattern, string $replacement, $subject, int $limit = -1, ?int &$count = null): string {}
    }
}

namespace PhpCsFixer\Fixer\Import {
    /**
     * @method void removeUseDeclaration(\PhpCsFixer\Tokenizer\Tokens $tokens, \PhpCsFixer\Tokenizer\Analyzer\Analysis\NamespaceUseAnalysis $useDeclaration)
     */
    class NoUnusedImportsFixer {}
}

namespace PhpCsFixer\Tokenizer {
    final class Token {}

    /**
     * @extends \SplFixedArray<Token>
     *
     * @method Token offsetGet()
     * @method array<Token> toArray()
     */
    class Tokens extends \SplFixedArray {}

    /**
     * @method array<int, array{token: Token, type: string, classIndex: int}> getClassyElements()
     */
    class TokensAnalyzer {}
}
